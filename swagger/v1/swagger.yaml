---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/auth/login":
    post:
      summary: Login user
      tags:
      - Auth
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Default:
                  value:
                    data:
                      message: Logged in successfully.
                      token: eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI5N2M2MjBjMC1hMzVlLTQ1YTctYTgyMy04MWQ0ZjU3MTg1MDEiLCJzdWIiOiI5NDEwMDgxNy0wMTM5LTQ1N2UtYmI5OC1iNzc1ODJjOWZlYWYiLCJzY3AiOiJ1c2VyIiwiYXVkIjpudWxsLCJpYXQiOjE3NDExMzMwNTEsImV4cCI6MTc0MTIxOTQ1MX0.513iBIkDjVrSlWHVOv6zPp_FzDN0HYMGBCbNiVwQd4I
                      user:
                        id: 94100817-0139-457e-bb98-b77582c9feaf
                        avatar:
                          id: 
                          attachment_id: 
                          content_type: 
                          url: 
                        email: test@test
                        full_name: Angelo Douglas
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/auth/requests/login"
  "/api/auth/signup":
    post:
      summary: Sign up user
      tags:
      - Auth
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Default:
                  value:
                    data:
                      message: Signed up successfully.
                      token: eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NjEyMGIxNi02NTFmLTQ3YmYtYjdiMS0yOGY0NGZhMDEzY2UiLCJzdWIiOiI3OTM0ZGM3Yy1iYTRjLTQzOWEtYTQzZS0wNmVjZDlhMTM3MDgiLCJzY3AiOiJ1c2VyIiwiYXVkIjpudWxsLCJpYXQiOjE3NDExMzMwNTEsImV4cCI6MTc0MTIxOTQ1MX0.mKxGzYCfhtgG1McgxfSyNyLKBqkR7s7DInuzU3R34jw
                      user:
                        id: 7934dc7c-ba4c-439a-a43e-06ecd9a13708
                        avatar:
                          id: 
                          attachment_id: 
                          content_type: 
                          url: 
                        email: teste@teste
                        full_name: 
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/auth/requests/signup"
  "/api/auth/logout":
    delete:
      summary: Logout User
      tags:
      - Auth
      security:
      - bearer_auth: []
      responses:
        '200':
          description: Successful
  "/api/v1/categories":
    get:
      summary: List Categories
      tags:
      - Categories
      security:
      - bearer_auth: []
      parameters:
      - name: search
        in: query
        schema:
          type: string
      - name: q[user_id_eq]
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Filter by user_id or global
          content:
            application/json:
              examples:
                Default:
                  value:
                    meta:
                      current_page: 1
                      total_pages: 1
                      current_page_size: 50
                      total: 1
                    data:
                    - id: 230857fa-f8ed-4eab-8131-28d0a1187063
                      created_at: '2025-03-05T00:04:11.461Z'
                      description: Maxime itaque consequatur est.
                      name: Doyle Toy
                      updated_at: '2025-03-05T00:04:11.461Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Default:
                  value:
                    errors:
                      auth: You need to sign in or sign up before continuing.
    post:
      summary: Create Category
      tags:
      - Categories
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Default:
                  value:
                    data:
                      id: e4091216-a422-4962-b55f-5ff2de53a43a
                      created_at: 2025-03-05 00:04:11 UTC
                      description: dummy
                      name: dummy
                      updated_at: 2025-03-05 00:04:11 UTC
                      user:
                        id: 4614051a-478f-4fba-ae4a-70b7c413f9fa
                        avatar:
                          id: 
                          attachment_id: 
                          content_type: 
                          url: 
                        email: devon_walter@labadie.test
                        full_name: Janey Wiegand
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1/categories/requests/create"
  "/api/v1/users/{id}":
    get:
      summary: Show User
      tags:
      - Users
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Default:
                  value:
                    data:
                      id: 29b6705e-ab21-4d3b-94a3-ad6991312f45
                      avatar:
                        id: 
                        attachment_id: 
                        content_type: 
                        url: 
                      cpf: 
                      email: augustus_yost@sawayn-metz.example
                      full_name: Prof. Phillis Gulgowski
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Default:
                  value:
                    errors:
                      auth: You need to sign in or sign up before continuing.
        '404':
          description: Not found
          content:
            application/json:
              examples:
                Default:
                  value:
                    errors:
                      base:
                      - Couldn't find User with 'id'=not_an_id
                    request_id: 6f9a4cf7-6cb7-4226-ade1-f90851a33808
    put:
      summary: Update User
      tags:
      - Users
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Default:
                  value:
                    data:
                      id: 7579f6be-09ad-4867-a4b0-2708137b7bf8
                      avatar:
                        id: 
                        attachment_id: 
                        content_type: 
                        url: 
                      cpf: '12496062095'
                      email: admin@acme.com
                      full_name: Dummy Name
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Default:
                  value:
                    errors:
                      auth: You need to sign in or sign up before continuing.
        '404':
          description: Not found
          content:
            application/json:
              examples:
                Default:
                  value:
                    errors:
                      base:
                      - Couldn't find User with 'id'=not_an_id
                    request_id: 60038750-160a-4666-80ec-1ca5eb916f8b
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1/users/requests/update"
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
  schemas:
    auth:
      requests:
        login:
          title: User Login Request
          type: object
          properties:
            user:
              type: object
              properties:
                email:
                  type: string
                  example: test@test
                password:
                  type: string
              required:
              - email
              - password
          required:
          - user
        signup:
          title: Create User Request
          type: object
          properties:
            user:
              type: object
              properties:
                email:
                  type: string
                  example: test@test
                password:
                  type: string
                full_name:
                  type: string
              required:
              - email
              - password
      responses:
        login:
          title: Create User Response
          type: object
          properties:
            data:
              message:
                type: string
              token:
                type: string
              user:
                "$ref": "#/components/schemas/v1/users/_common"
          required:
          - data
        signup:
          title: Create User Response
          type: object
          properties:
            data:
              message:
                type: string
              token:
                type: string
          required:
          - data
    common:
      pagination_meta:
        title: Pagination Meta
        type: object
        properties:
          current_page:
            type: integer
          total_pages:
            type: integer
          current_page_size:
            type: integer
          total:
            type: integer
        required:
        - current_page
        - total_pages
        - current_page_size
        - total
    v1:
      categories:
        _common:
          title: Category
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
              nullable: true
            created_at:
              type: string
            updated_at:
              type: string
        _private:
          title: Category (private)
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
              nullable: true
            created_at:
              type: string
            updated_at:
              type: string
            user:
              "$ref": "#/components/schemas/v1/users/_common"
        requests:
          create:
            title: Create Category Request
            type: object
            properties:
              category:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                    nullable: true
                required:
                - name
            required:
            - category
        responses:
          create:
            title: Create category response
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/v1/categories/_private"
          index:
            title: Category index response
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/v1/categories/_common"
              meta:
                "$ref": "#/components/schemas/common/pagination_meta"
            required:
            - meta
            - data
      users:
        _common:
          title: User
          type: object
          additionalProperties: true
          properties:
            id:
              type: string
            full_name:
              type: string
            email:
              type: string
              nullable: true
        _private:
          title: User Private
          type: object
          additionalProperties: true
          properties:
            id:
              type: string
            full_name:
              type: string
            email:
              type: string
              nullable: true
            cpf:
              type: string
              nullable: true
        requests:
          update:
            title: Update User Request
            type: object
            properties:
              user:
                type: object
                properties:
                  full_name:
                    type: string
                  cpf:
                    type: string
                    nullable: true
                  email:
                    type: string
                    nullable: true
                required:
                - user
        responses:
          show:
            title: Show User Response
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/v1/users/_private"
            required:
            - data
servers:
- url: http://localhost:3000
